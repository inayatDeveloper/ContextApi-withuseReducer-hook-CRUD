{"ast":null,"code":"var _jsxFileName = \"/home/inayat/rns-project/ContextApi-withuseReducer-hook-CRUD/src/context/contactListContext.js\";\nimport React from \"react\";\nimport { GetContact, EditContact, AddContact, DeleteContact } from \"../constant\";\nconst initialstate = {\n  Contacts: [{\n    id: 1,\n    Name: \"Inayat\",\n    Email: \"Inayat@gmail.com\",\n    CreatedDate: \"2020-9-4 5:0:21\",\n    ModifiedDate: \"2020-9-4 7:0:21\"\n  }, {\n    id: 2,\n    Name: \"Ali\",\n    Email: \"Ali@gmail.com\",\n    CreatedDate: \"2020-9-4 4:0:21\",\n    ModifiedDate: \"2020-9-4 8:0:21\"\n  }, {\n    id: 3,\n    Name: \"Yamaan\",\n    Email: \"Yamaankhan@gmail.com\",\n    CreatedDate: \"2020-9-4 4:0:21\",\n    ModifiedDate: \"2020-9-4 8:0:21\"\n  }]\n};\nconst contactStateContext = React.createContext();\n\nconst ContactListReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case GetContact:\n      return { ...state\n      };\n\n    case AddContact:\n      return { ...state,\n        Contacts: state.Contacts.concat(action.data)\n      };\n\n    case DeleteContact:\n      return { ...state,\n        Contacts: state.Contacts.filter(item => item.id !== action.id)\n      };\n\n    case EditContact:\n      return { ...state,\n        Contacts: state.Contacts.map((content, i) => content.id == action.data.id ? { ...content,\n          Name: action.data.Name,\n          Email: action.data.Email,\n          ModifiedDate: action.data.ModifiedDate\n        } : content)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ContactListProvider = ({\n  children\n}) => {\n  var [state, dispatch] = React.useReducer(ContactListReducer, initialstate);\n  return /*#__PURE__*/React.createElement(contactStateContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { ContactListProvider, contactStateContext };","map":{"version":3,"sources":["/home/inayat/rns-project/ContextApi-withuseReducer-hook-CRUD/src/context/contactListContext.js"],"names":["React","GetContact","EditContact","AddContact","DeleteContact","initialstate","Contacts","id","Name","Email","CreatedDate","ModifiedDate","contactStateContext","createContext","ContactListReducer","state","action","type","concat","data","filter","item","map","content","i","ContactListProvider","children","dispatch","useReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,aAJF,QAKO,aALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,KAAK,EAAE,kBAHT;AAIEC,IAAAA,WAAW,EAAE,iBAJf;AAKEC,IAAAA,YAAY,EAAE;AALhB,GADQ,EAQR;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,KAAK,EAAE,eAHT;AAIEC,IAAAA,WAAW,EAAE,iBAJf;AAKEC,IAAAA,YAAY,EAAE;AALhB,GARQ,EAeR;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,KAAK,EAAE,sBAHT;AAIEC,IAAAA,WAAW,EAAE,iBAJf;AAKEC,IAAAA,YAAY,EAAE;AALhB,GAfQ;AADS,CAArB;AA0BA,MAAMC,mBAAmB,GAAGZ,KAAK,CAACa,aAAN,EAA5B;;AACA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,UAAL;AACE,aAAO,EACL,GAAGc;AADE,OAAP;;AAGF,SAAKZ,UAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELT,QAAAA,QAAQ,EAAES,KAAK,CAACT,QAAN,CAAeY,MAAf,CAAsBF,MAAM,CAACG,IAA7B;AAFL,OAAP;;AAIF,SAAKf,aAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELT,QAAAA,QAAQ,EAAES,KAAK,CAACT,QAAN,CAAec,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYS,MAAM,CAACT,EAAnD;AAFL,OAAP;;AAIF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELT,QAAAA,QAAQ,EAAES,KAAK,CAACT,QAAN,CAAegB,GAAf,CAAmB,CAACC,OAAD,EAAUC,CAAV,KAC3BD,OAAO,CAAChB,EAAR,IAAcS,MAAM,CAACG,IAAP,CAAYZ,EAA1B,GACI,EACA,GAAGgB,OADH;AAEAf,UAAAA,IAAI,EAAEQ,MAAM,CAACG,IAAP,CAAYX,IAFlB;AAGAC,UAAAA,KAAK,EAAEO,MAAM,CAACG,IAAP,CAAYV,KAHnB;AAIAE,UAAAA,YAAY,EAAEK,MAAM,CAACG,IAAP,CAAYR;AAJ1B,SADJ,GAOIY,OARI;AAFL,OAAP;;AAaF;AACE,aAAOR,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,MAAMU,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,MAAI,CAACX,KAAD,EAAQY,QAAR,IAAoB3B,KAAK,CAAC4B,UAAN,CAAiBd,kBAAjB,EAAqCT,YAArC,CAAxB;AAEA,sBACE,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAF;AAASY,MAAAA;AAAT,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,QAFH,CADF;AAOD,CAVD;;AAaA,SAASD,mBAAT,EAA8Bb,mBAA9B","sourcesContent":["import React from \"react\"\nimport {\n  GetContact,\n  EditContact,\n  AddContact,\n  DeleteContact,\n} from \"../constant\";\n\nconst initialstate = {\n  Contacts: [\n    {\n      id: 1,\n      Name: \"Inayat\",\n      Email: \"Inayat@gmail.com\",\n      CreatedDate: \"2020-9-4 5:0:21\",\n      ModifiedDate: \"2020-9-4 7:0:21\",\n    },\n    {\n      id: 2,\n      Name: \"Ali\",\n      Email: \"Ali@gmail.com\",\n      CreatedDate: \"2020-9-4 4:0:21\",\n      ModifiedDate: \"2020-9-4 8:0:21\",\n    },\n    {\n      id: 3,\n      Name: \"Yamaan\",\n      Email: \"Yamaankhan@gmail.com\",\n      CreatedDate: \"2020-9-4 4:0:21\",\n      ModifiedDate: \"2020-9-4 8:0:21\",\n    },\n  ],\n};\n\nconst contactStateContext = React.createContext();\nconst ContactListReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case GetContact:\n      return {\n        ...state,\n      };\n    case AddContact:\n      return {\n        ...state,\n        Contacts: state.Contacts.concat(action.data),\n      };\n    case DeleteContact:\n      return {\n        ...state,\n        Contacts: state.Contacts.filter((item) => item.id !== action.id),\n      };\n    case EditContact:\n      return {\n        ...state,\n        Contacts: state.Contacts.map((content, i) =>\n          content.id == action.data.id\n            ? {\n              ...content,\n              Name: action.data.Name,\n              Email: action.data.Email,\n              ModifiedDate: action.data.ModifiedDate,\n            }\n            : content\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nconst ContactListProvider = ({ children }) => {\n  var [state, dispatch] = React.useReducer(ContactListReducer, initialstate);\n\n  return (\n    <contactStateContext.Provider value={{ state, dispatch }}>\n\n      {children}\n\n    </contactStateContext.Provider>\n  );\n}\n\n\nexport { ContactListProvider, contactStateContext }\n"]},"metadata":{},"sourceType":"module"}